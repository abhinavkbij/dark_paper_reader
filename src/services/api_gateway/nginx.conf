events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 ipv6=off valid=30s;

    upstream orchestrator {
        server orchestrator:3001;
    }

    # HTTP server block - redirects all traffic to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name darkpaperreader.bijarnia.in;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server block - main configuration
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name darkpaperreader.bijarnia.in;

        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/ocr.backend.bijarnia.in/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ocr.backend.bijarnia.in/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        client_max_body_size 100M;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # API routes to orchestrator
        location /api/ {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Hide duplicate CORS headers from upstream
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;

            proxy_pass http://orchestrator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Serve static frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }

    # MinIO API endpoint
    server {
        listen 443 ssl;
        server_name s3.darkpaperreader.bijarnia.in;  # Use subdomain for MinIO

        ssl_certificate /etc/letsencrypt/live/s3.darkpaperreader.bijarnia.in/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/s3.darkpaperreader.bijarnia.in/privkey.pem;

        # Allow large file uploads
        client_max_body_size 0;
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://minio:9000;  # Your MinIO container
        }
    }

    # MinIO Console
    server {
        listen 443 ssl;
        server_name console.darkpaperreader.bijarnia.in;

        ssl_certificate /etc/letsencrypt/live/console.darkpaperreader.bijarnia.in/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/console.darkpaperreader.bijarnia.in/privkey.pem;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://minio:9001;  # MinIO console port
        }
    }
}
